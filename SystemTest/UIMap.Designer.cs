// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 11.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SystemTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Тест функций пользователя
        ///1. Просмотр списка шаблонов поиска
        ///2. Добавление/редактирование/удаление шаблонов поиска
        ///3. Поиск по ключевым словам
        ///4. Поиск по формату файла
        ///5. Просмотр списка файлов в системе
        /// </summary>
        public void SystemTest1()
        {
            #region Variable Declarations
            WinEdit uITxtRegExpEdit = this.UIForm1Window.UITxtRegExpWindow.UITxtRegExpEdit;
            WinComboBox uICmbActionComboBox = this.UIForm1Window.UICmbActionWindow.UICmbActionComboBox;
            WinComboBox uICmbCompareComboBox = this.UIForm1Window.UICmbCompareWindow.UICmbCompareComboBox;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            WinButton uIЗаполнитьButton = this.UIForm1Window.UIЗаполнитьWindow.UIЗаполнитьButton;
            WinComboBox uICmbPatternsComboBox = this.UIForm1Window.UICmbPatternsWindow.UICmbPatternsComboBox;
            WinEdit uITxtNewRegExpEdit = this.UIForm1Window.UITxtNewRegExpWindow.UITxtNewRegExpEdit;
            WinComboBox uIИзменитьСравниватьсComboBox = this.UIForm1Window.UICmbNewCompareWindow.UIИзменитьСравниватьсComboBox;
            WinComboBox uICmbNewActionComboBox = this.UIForm1Window.UICmbNewActionWindow.UICmbNewActionComboBox;
            WinButton uIОбновитьButton = this.UIForm1Window.UIОбновитьWindow.UIОбновитьButton;
            WinButton uIУдалитьButton = this.UIForm1Window.UIУдалитьWindow.UIУдалитьButton;
            WinEdit uITxtKeywordsEdit = this.UIForm1Window.UITxtKeywordsWindow.UITxtKeywordsEdit;
            WinButton uIПоискпоключевымсловаButton = this.UIForm1Window.UIПоискпоключевымсловаWindow.UIПоискпоключевымсловаButton;
            WinCell uIGitCell = this.UIForm1Window.UIDataGridView1Window.UIDataGridViewTable.UIСтрока1Row.UIGitCell;
            WinRowHeader uIItemRowHeader = this.UIForm1Window.UIDataGridView1Window.UIDataGridViewTable.UIСтрока1Row.UIItemRowHeader;
            WinCheckBox uIDocCheckBox = this.UIForm1Window.UIDocWindow.UIDocCheckBox;
            WinCheckBox uIDocxCheckBox = this.UIForm1Window.UIDocxWindow.UIDocxCheckBox;
            WinButton uIПоискButton = this.UIForm1Window.UIПоискWindow.UIПоискButton;
            WinButton uIВсефайлыButton = this.UIForm1Window.UIВсефайлыWindow.UIВсефайлыButton;
            WinButton uIЗакрытьButton = this.UIForm1Window.UIForm1TitleBar.UIЗакрытьButton;
            #endregion

            // Последнее действие мыши не записано.

            // Тип "test" в "txtRegExp" надпись
            uITxtRegExpEdit.Text = this.SystemTest1Params.UITxtRegExpEditText;

            // Выберите "Включить" в "cmbAction" поле со списком
            uICmbActionComboBox.SelectedItem = this.SystemTest1Params.UICmbActionComboBoxSelectedItem;

            // Выберите "Абсолютный путь" в "cmbCompare" поле со списком
            uICmbCompareComboBox.SelectedItem = this.SystemTest1Params.UICmbCompareComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(45, 9));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(24, 13));

            // Щелкните "Заполнить" кнопка
            Mouse.Click(uIЗаполнитьButton, new Point(30, 8));

            // Выберите "test | Включить | Абсолютный путь" в "cmbPatterns" поле со списком
            uICmbPatternsComboBox.SelectedItem = this.SystemTest1Params.UICmbPatternsComboBoxSelectedItem;

            // Тип "test1" в "txtNewRegExp" надпись
            uITxtNewRegExpEdit.Text = this.SystemTest1Params.UITxtNewRegExpEditText;

            // Выберите "Имя файла" в "Изменить Сравнивать с" поле со списком
            uIИзменитьСравниватьсComboBox.SelectedItem = this.SystemTest1Params.UIИзменитьСравниватьсComboBoxSelectedItem;

            // Щелкните "txtNewRegExp" надпись
            Mouse.Click(uITxtNewRegExpEdit, new Point(58, 4));

            // Выберите "Исключить" в "cmbNewAction" поле со списком
            uICmbNewActionComboBox.SelectedItem = this.SystemTest1Params.UICmbNewActionComboBoxSelectedItem;

            // Щелкните "Обновить" кнопка
            Mouse.Click(uIОбновитьButton, new Point(55, 9));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(49, 12));

            // Щелкните "Заполнить" кнопка
            Mouse.Click(uIЗаполнитьButton, new Point(44, 8));

            // Выберите "test1 | Имя файла | Исключить" в "cmbPatterns" поле со списком
            uICmbPatternsComboBox.SelectedItem = this.SystemTest1Params.UICmbPatternsComboBoxSelectedItem1;

            // Щелкните "Удалить" кнопка
            Mouse.Click(uIУдалитьButton, new Point(65, 14));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(22, 8));

            // Тип "git" в "txtKeywords" надпись
            uITxtKeywordsEdit.Text = this.SystemTest1Params.UITxtKeywordsEditText;

            // Щелкните "Поиск по ключевым словам" кнопка
            Mouse.Click(uIПоискпоключевымсловаButton, new Point(43, 18));

            // Щелкните "Git" ячейка
            Mouse.Click(uIGitCell, new Point(31, 8));

            // Щелкните заголовок строки
            Mouse.Click(uIItemRowHeader, new Point(29, 10));

            // Выбор ".doc" флажок
            uIDocCheckBox.Checked = this.SystemTest1Params.UIDocCheckBoxChecked;

            // Выбор ".docx" флажок
            uIDocxCheckBox.Checked = this.SystemTest1Params.UIDocxCheckBoxChecked;

            // Щелкните "Поиск" кнопка
            Mouse.Click(uIПоискButton, new Point(39, 10));

            // Щелкните "Все файлы" кнопка
            Mouse.Click(uIВсефайлыButton, new Point(33, 11));

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(20, 10));
        }
        
        #region Properties
        public virtual SystemTest1Params SystemTest1Params
        {
            get
            {
                if ((this.mSystemTest1Params == null))
                {
                    this.mSystemTest1Params = new SystemTest1Params();
                }
                return this.mSystemTest1Params;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        
        public UIОКWindow UIОКWindow
        {
            get
            {
                if ((this.mUIОКWindow == null))
                {
                    this.mUIОКWindow = new UIОКWindow();
                }
                return this.mUIОКWindow;
            }
        }
        #endregion
        
        #region Fields
        private SystemTest1Params mSystemTest1Params;
        
        private UIForm1Window mUIForm1Window;
        
        private UIОКWindow mUIОКWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "SystemTest1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class SystemTest1Params
    {
        
        #region Fields
        /// <summary>
        /// Тип "test" в "txtRegExp" надпись
        /// </summary>
        public string UITxtRegExpEditText = "test";
        
        /// <summary>
        /// Выберите "Включить" в "cmbAction" поле со списком
        /// </summary>
        public string UICmbActionComboBoxSelectedItem = "Включить";
        
        /// <summary>
        /// Выберите "Абсолютный путь" в "cmbCompare" поле со списком
        /// </summary>
        public string UICmbCompareComboBoxSelectedItem = "Абсолютный путь";
        
        /// <summary>
        /// Выберите "test | Включить | Абсолютный путь" в "cmbPatterns" поле со списком
        /// </summary>
        public string UICmbPatternsComboBoxSelectedItem = "test | Включить | Абсолютный путь";
        
        /// <summary>
        /// Тип "test1" в "txtNewRegExp" надпись
        /// </summary>
        public string UITxtNewRegExpEditText = "test1";
        
        /// <summary>
        /// Выберите "Имя файла" в "Изменить Сравнивать с" поле со списком
        /// </summary>
        public string UIИзменитьСравниватьсComboBoxSelectedItem = "Имя файла";
        
        /// <summary>
        /// Выберите "Исключить" в "cmbNewAction" поле со списком
        /// </summary>
        public string UICmbNewActionComboBoxSelectedItem = "Исключить";
        
        /// <summary>
        /// Выберите "test1 | Имя файла | Исключить" в "cmbPatterns" поле со списком
        /// </summary>
        public string UICmbPatternsComboBoxSelectedItem1 = "test1 | Имя файла | Исключить";
        
        /// <summary>
        /// Тип "git" в "txtKeywords" надпись
        /// </summary>
        public string UITxtKeywordsEditText = "git";
        
        /// <summary>
        /// Выбор ".doc" флажок
        /// </summary>
        public bool UIDocCheckBoxChecked = true;
        
        /// <summary>
        /// Выбор ".docx" флажок
        /// </summary>
        public bool UIDocxCheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITxtRegExpWindow UITxtRegExpWindow
        {
            get
            {
                if ((this.mUITxtRegExpWindow == null))
                {
                    this.mUITxtRegExpWindow = new UITxtRegExpWindow(this);
                }
                return this.mUITxtRegExpWindow;
            }
        }
        
        public UICmbActionWindow UICmbActionWindow
        {
            get
            {
                if ((this.mUICmbActionWindow == null))
                {
                    this.mUICmbActionWindow = new UICmbActionWindow(this);
                }
                return this.mUICmbActionWindow;
            }
        }
        
        public UICmbCompareWindow UICmbCompareWindow
        {
            get
            {
                if ((this.mUICmbCompareWindow == null))
                {
                    this.mUICmbCompareWindow = new UICmbCompareWindow(this);
                }
                return this.mUICmbCompareWindow;
            }
        }
        
        public UIДобавитьWindow UIДобавитьWindow
        {
            get
            {
                if ((this.mUIДобавитьWindow == null))
                {
                    this.mUIДобавитьWindow = new UIДобавитьWindow(this);
                }
                return this.mUIДобавитьWindow;
            }
        }
        
        public UIЗаполнитьWindow UIЗаполнитьWindow
        {
            get
            {
                if ((this.mUIЗаполнитьWindow == null))
                {
                    this.mUIЗаполнитьWindow = new UIЗаполнитьWindow(this);
                }
                return this.mUIЗаполнитьWindow;
            }
        }
        
        public UICmbPatternsWindow UICmbPatternsWindow
        {
            get
            {
                if ((this.mUICmbPatternsWindow == null))
                {
                    this.mUICmbPatternsWindow = new UICmbPatternsWindow(this);
                }
                return this.mUICmbPatternsWindow;
            }
        }
        
        public UITxtNewRegExpWindow UITxtNewRegExpWindow
        {
            get
            {
                if ((this.mUITxtNewRegExpWindow == null))
                {
                    this.mUITxtNewRegExpWindow = new UITxtNewRegExpWindow(this);
                }
                return this.mUITxtNewRegExpWindow;
            }
        }
        
        public UICmbNewCompareWindow UICmbNewCompareWindow
        {
            get
            {
                if ((this.mUICmbNewCompareWindow == null))
                {
                    this.mUICmbNewCompareWindow = new UICmbNewCompareWindow(this);
                }
                return this.mUICmbNewCompareWindow;
            }
        }
        
        public UICmbNewActionWindow UICmbNewActionWindow
        {
            get
            {
                if ((this.mUICmbNewActionWindow == null))
                {
                    this.mUICmbNewActionWindow = new UICmbNewActionWindow(this);
                }
                return this.mUICmbNewActionWindow;
            }
        }
        
        public UIОбновитьWindow UIОбновитьWindow
        {
            get
            {
                if ((this.mUIОбновитьWindow == null))
                {
                    this.mUIОбновитьWindow = new UIОбновитьWindow(this);
                }
                return this.mUIОбновитьWindow;
            }
        }
        
        public UIУдалитьWindow UIУдалитьWindow
        {
            get
            {
                if ((this.mUIУдалитьWindow == null))
                {
                    this.mUIУдалитьWindow = new UIУдалитьWindow(this);
                }
                return this.mUIУдалитьWindow;
            }
        }
        
        public UITxtKeywordsWindow UITxtKeywordsWindow
        {
            get
            {
                if ((this.mUITxtKeywordsWindow == null))
                {
                    this.mUITxtKeywordsWindow = new UITxtKeywordsWindow(this);
                }
                return this.mUITxtKeywordsWindow;
            }
        }
        
        public UIПоискпоключевымсловаWindow UIПоискпоключевымсловаWindow
        {
            get
            {
                if ((this.mUIПоискпоключевымсловаWindow == null))
                {
                    this.mUIПоискпоключевымсловаWindow = new UIПоискпоключевымсловаWindow(this);
                }
                return this.mUIПоискпоключевымсловаWindow;
            }
        }
        
        public UIDataGridView1Window UIDataGridView1Window
        {
            get
            {
                if ((this.mUIDataGridView1Window == null))
                {
                    this.mUIDataGridView1Window = new UIDataGridView1Window(this);
                }
                return this.mUIDataGridView1Window;
            }
        }
        
        public UIDocWindow UIDocWindow
        {
            get
            {
                if ((this.mUIDocWindow == null))
                {
                    this.mUIDocWindow = new UIDocWindow(this);
                }
                return this.mUIDocWindow;
            }
        }
        
        public UIDocxWindow UIDocxWindow
        {
            get
            {
                if ((this.mUIDocxWindow == null))
                {
                    this.mUIDocxWindow = new UIDocxWindow(this);
                }
                return this.mUIDocxWindow;
            }
        }
        
        public UIПоискWindow UIПоискWindow
        {
            get
            {
                if ((this.mUIПоискWindow == null))
                {
                    this.mUIПоискWindow = new UIПоискWindow(this);
                }
                return this.mUIПоискWindow;
            }
        }
        
        public UIВсефайлыWindow UIВсефайлыWindow
        {
            get
            {
                if ((this.mUIВсефайлыWindow == null))
                {
                    this.mUIВсефайлыWindow = new UIВсефайлыWindow(this);
                }
                return this.mUIВсефайлыWindow;
            }
        }
        
        public UIForm1TitleBar UIForm1TitleBar
        {
            get
            {
                if ((this.mUIForm1TitleBar == null))
                {
                    this.mUIForm1TitleBar = new UIForm1TitleBar(this);
                }
                return this.mUIForm1TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UITxtRegExpWindow mUITxtRegExpWindow;
        
        private UICmbActionWindow mUICmbActionWindow;
        
        private UICmbCompareWindow mUICmbCompareWindow;
        
        private UIДобавитьWindow mUIДобавитьWindow;
        
        private UIЗаполнитьWindow mUIЗаполнитьWindow;
        
        private UICmbPatternsWindow mUICmbPatternsWindow;
        
        private UITxtNewRegExpWindow mUITxtNewRegExpWindow;
        
        private UICmbNewCompareWindow mUICmbNewCompareWindow;
        
        private UICmbNewActionWindow mUICmbNewActionWindow;
        
        private UIОбновитьWindow mUIОбновитьWindow;
        
        private UIУдалитьWindow mUIУдалитьWindow;
        
        private UITxtKeywordsWindow mUITxtKeywordsWindow;
        
        private UIПоискпоключевымсловаWindow mUIПоискпоключевымсловаWindow;
        
        private UIDataGridView1Window mUIDataGridView1Window;
        
        private UIDocWindow mUIDocWindow;
        
        private UIDocxWindow mUIDocxWindow;
        
        private UIПоискWindow mUIПоискWindow;
        
        private UIВсефайлыWindow mUIВсефайлыWindow;
        
        private UIForm1TitleBar mUIForm1TitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UITxtRegExpWindow : WinWindow
    {
        
        public UITxtRegExpWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtRegExp";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtRegExpEdit
        {
            get
            {
                if ((this.mUITxtRegExpEdit == null))
                {
                    this.mUITxtRegExpEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtRegExpEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Сравнивать с";
                    this.mUITxtRegExpEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtRegExpEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtRegExpEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UICmbActionWindow : WinWindow
    {
        
        public UICmbActionWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbAction";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbActionComboBox
        {
            get
            {
                if ((this.mUICmbActionComboBox == null))
                {
                    this.mUICmbActionComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUICmbActionComboBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICmbActionComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbActionComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UICmbCompareWindow : WinWindow
    {
        
        public UICmbCompareWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbCompare";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbCompareComboBox
        {
            get
            {
                if ((this.mUICmbCompareComboBox == null))
                {
                    this.mUICmbCompareComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUICmbCompareComboBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICmbCompareComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbCompareComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIДобавитьWindow : WinWindow
    {
        
        public UIДобавитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnInsert";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIЗаполнитьWindow : WinWindow
    {
        
        public UIЗаполнитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFillCombobox";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗаполнитьButton
        {
            get
            {
                if ((this.mUIЗаполнитьButton == null))
                {
                    this.mUIЗаполнитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗаполнитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Заполнить";
                    this.mUIЗаполнитьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIЗаполнитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗаполнитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UICmbPatternsWindow : WinWindow
    {
        
        public UICmbPatternsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbPatterns";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbPatternsComboBox
        {
            get
            {
                if ((this.mUICmbPatternsComboBox == null))
                {
                    this.mUICmbPatternsComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUICmbPatternsComboBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICmbPatternsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbPatternsComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UITxtNewRegExpWindow : WinWindow
    {
        
        public UITxtNewRegExpWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNewRegExp";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNewRegExpEdit
        {
            get
            {
                if ((this.mUITxtNewRegExpEdit == null))
                {
                    this.mUITxtNewRegExpEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtNewRegExpEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtNewRegExpEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNewRegExpEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UICmbNewCompareWindow : WinWindow
    {
        
        public UICmbNewCompareWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbNewCompare";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIИзменитьСравниватьсComboBox
        {
            get
            {
                if ((this.mUIИзменитьСравниватьсComboBox == null))
                {
                    this.mUIИзменитьСравниватьсComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIИзменитьСравниватьсComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Изменить Сравнивать с";
                    this.mUIИзменитьСравниватьсComboBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIИзменитьСравниватьсComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIИзменитьСравниватьсComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UICmbNewActionWindow : WinWindow
    {
        
        public UICmbNewActionWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbNewAction";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbNewActionComboBox
        {
            get
            {
                if ((this.mUICmbNewActionComboBox == null))
                {
                    this.mUICmbNewActionComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUICmbNewActionComboBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICmbNewActionComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbNewActionComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIОбновитьWindow : WinWindow
    {
        
        public UIОбновитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnUpdate";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIОбновитьButton
        {
            get
            {
                if ((this.mUIОбновитьButton == null))
                {
                    this.mUIОбновитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОбновитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Обновить";
                    this.mUIОбновитьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIОбновитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОбновитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIУдалитьWindow : WinWindow
    {
        
        public UIУдалитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDelete";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIУдалитьButton
        {
            get
            {
                if ((this.mUIУдалитьButton == null))
                {
                    this.mUIУдалитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIУдалитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Удалить";
                    this.mUIУдалитьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIУдалитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIУдалитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UITxtKeywordsWindow : WinWindow
    {
        
        public UITxtKeywordsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtKeywords";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtKeywordsEdit
        {
            get
            {
                if ((this.mUITxtKeywordsEdit == null))
                {
                    this.mUITxtKeywordsEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtKeywordsEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtKeywordsEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtKeywordsEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIПоискпоключевымсловаWindow : WinWindow
    {
        
        public UIПоискпоключевымсловаWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSearchKeywords";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIПоискпоключевымсловаButton
        {
            get
            {
                if ((this.mUIПоискпоключевымсловаButton == null))
                {
                    this.mUIПоискпоключевымсловаButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПоискпоключевымсловаButton.SearchProperties[WinButton.PropertyNames.Name] = "Поиск по ключевым словам";
                    this.mUIПоискпоключевымсловаButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIПоискпоключевымсловаButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПоискпоключевымсловаButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIDataGridView1Window : WinWindow
    {
        
        public UIDataGridView1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridView1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UIСтрока1Row UIСтрока1Row
        {
            get
            {
                if ((this.mUIСтрока1Row == null))
                {
                    this.mUIСтрока1Row = new UIСтрока1Row(this);
                }
                return this.mUIСтрока1Row;
            }
        }
        #endregion
        
        #region Fields
        private UIСтрока1Row mUIСтрока1Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIСтрока1Row : WinRow
    {
        
        public UIСтрока1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Value] = @"Git;git;40960;doc;Git (произн. «гит»[6]) — распределённая система управления версиями. Проект был создан Линусом Торвальдсом для управления разработкой ядра Linux, первая версия выпущена 7 апреля 2005 года. На сегодняшний день его поддерживает Джунио Хамано.";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCell UIGitCell
        {
            get
            {
                if ((this.mUIGitCell == null))
                {
                    this.mUIGitCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIGitCell.SearchProperties[WinCell.PropertyNames.Value] = "Git";
                    this.mUIGitCell.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIGitCell;
            }
        }
        
        public WinRowHeader UIItemRowHeader
        {
            get
            {
                if ((this.mUIItemRowHeader == null))
                {
                    this.mUIItemRowHeader = new WinRowHeader(this);
                    #region Условия поиска
                    this.mUIItemRowHeader.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItemRowHeader;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIGitCell;
        
        private WinRowHeader mUIItemRowHeader;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIDocWindow : WinWindow
    {
        
        public UIDocWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIDocCheckBox
        {
            get
            {
                if ((this.mUIDocCheckBox == null))
                {
                    this.mUIDocCheckBox = new WinCheckBox(this);
                    #region Условия поиска
                    this.mUIDocCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = ".doc";
                    this.mUIDocCheckBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIDocCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIDocCheckBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIDocxWindow : WinWindow
    {
        
        public UIDocxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox2";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIDocxCheckBox
        {
            get
            {
                if ((this.mUIDocxCheckBox == null))
                {
                    this.mUIDocxCheckBox = new WinCheckBox(this);
                    #region Условия поиска
                    this.mUIDocxCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = ".docx";
                    this.mUIDocxCheckBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIDocxCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIDocxCheckBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIПоискWindow : WinWindow
    {
        
        public UIПоискWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSearch";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIПоискButton
        {
            get
            {
                if ((this.mUIПоискButton == null))
                {
                    this.mUIПоискButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПоискButton.SearchProperties[WinButton.PropertyNames.Name] = "Поиск";
                    this.mUIПоискButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIПоискButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПоискButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIВсефайлыWindow : WinWindow
    {
        
        public UIВсефайлыWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAllFiles";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIВсефайлыButton
        {
            get
            {
                if ((this.mUIВсефайлыButton == null))
                {
                    this.mUIВсефайлыButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВсефайлыButton.SearchProperties[WinButton.PropertyNames.Name] = "Все файлы";
                    this.mUIВсефайлыButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIВсефайлыButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВсефайлыButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIForm1TitleBar : WinTitleBar
    {
        
        public UIForm1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIОКWindow : WinWindow
    {
        
        public UIОКWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ОК";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("ОК");
            #endregion
        }
        
        #region Properties
        public WinButton UIОКButton
        {
            get
            {
                if ((this.mUIОКButton == null))
                {
                    this.mUIОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mUIОКButton.WindowTitles.Add("ОК");
                    #endregion
                }
                return this.mUIОКButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОКButton;
        #endregion
    }
}
